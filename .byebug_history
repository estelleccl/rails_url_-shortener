exit
SecureRandom.hex(4)
SecureRandom.hex(5)
c
pluck_short_url
random_text
Url.last
pluck_short_url.include? random_text
random_text
temp_url
short_url
exit
a.include? "CPLPGKTQ"
a.include? SecureRandom.hex(8)
a = Url.pluck(:short_url)
SecureRandom.hex(8)
(0...8).map{(65 + rand(26)).chr}.join
SecureRandom.hex(8)
SecureRandom.hex
a = Url.pluck(:short_url)
Url.pluck(:short_url)
SecureRandom(8).hex
require 'securerandom'
SecureRandom(8).hex
exit
ActiveRecord::Associations::Preloader.new.preload(@urls, [:short_url])
a = Url.find_by_sql "SELECT * FROM urls WHERE short_url = ?", params[:short_url]ActiveRecord::Associations::Preloader.new.preload(@restaurants, [:reviews])
a = Url.find_by_sql "SELECT * FROM urls WHERE short_url = ?", params[:short_url]
a = Url.find_by_sql "SELECT * FROM urls WHERE short_url = ?;", params[:short_url]
a = Url.find_by_sql "SELECT * FROM urls WHERE short_url = ?", params[:short_url]
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = ?", params[:short_url])
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = '?'", params[:short_url])
params[:short_url]
params[:short_url}
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = ?", params[:short_url])
a.first
a
a = Url.where("short_url = ?", params[:short_url]).limit(1)
a.first.short_url
a.first
a
a.short_url
a = Url.where("short_url = ?", params[:short_url]).limit 1
a.short_url
a
a = Url.where("short_url = ?", params[:short_url])
a
a = Url.where("SELECT * FROM urls WHERE short_url = ?", params[:short_url])
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = ?", params[:short_url])
Url.exist?
Url.exits? :short_url=> params[:short_url]
Url.exits? short_url: params[:short_url]
Url.exits? params[:short_url]
Url.pluck(:short_url)
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = ?", params[:short_url])
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = ?, #{params[:short_url]}")
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = '?', #{params[:short_url]}")
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = '?'",params[:short_url])
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = '?'",  params[:short_url])
params[:short_url]
a = Url.find_by_sql("SELECT * FROM urls WHERE short_url = '?'", params[:short_url])
c
a.first.short_url
a.first
a
a.short_url
a = Url.find_by_sql "SELECT * FROM urls WHERE long_url = '#{@url.long_url}'"
a
a.second
a.short_url
a
a = Url.find_by_sql "SELECT short_url FROM urls WHERE long_url = '#{@url.long_url}'"
a
a = Url.find_by_sql "SELECT * FROM urls WHERE long_url = '#{@url.long_url}'"
a = Url.short_url_by_sql "SELECT * FROM urls WHERE long_url = '#{@url.long_url}'"
a
a = Url.count_by_sql "SELECT * FROM urls WHERE long_url = '#{@url.long_url}'"
a
a = Url.count_by_sql "SELECT short_url FROM urls WHERE long_url = '#{@url.long_url}'"
Url.count_by_sql "SELECT short_url FROM urls WHERE long_url = '#{@url.long_url}'"
Url.count_by_sql "SELECT short_url FROM urls WHERE long_url = #{@url.long_url}"
c
a =Url.find_by_long_url @url.long_url
a.short_url
a =Url.find_by_long_url "https://www.railstutorial.org/book/beginning"
Url.find_by_long_url "https://www.railstutorial.org/book/beginning".short_url
Url.find_by_long_url "https://www.railstutorial.org/book/beginning"
@url
c
@url.errors.full_messages.to_sentence
@url.errors.full_messages.first
@url.errors.full_messages
c
@url.errors.full_messages
@url.errors.messages.message
@url.errors.messages.long_url
@url.errors.messages
@url.errors.messages.long_url
@url.errors.messages
@url.errors
c
@url
n
@url
c
x
c
n
c
n
c
exit
@url
c
rake routes
@url
c
flash
c
@url
c
exit
c
exit
@url
c
exit
n
@url
c
@url
c
@url
c
cc
c
@url
c
@url
c
@url
exit
eit
@url
exit
if @url != nil 
if !@url.nil?
if !@url.nil? 
@url
